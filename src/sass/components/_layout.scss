#page {
  background: $white;
  min-height: 100vh;
  padding-top: 85px;
  display: flex;
  flex-direction: column;

  &.fixed_top {
    padding-top: 0;
  }
  #footer {
    margin-top: auto;
  }
}
body {
  &.dontScroll {
    overflow: hidden;
    height: 100%;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
  }
}
#body {
  @include respondToAbove(md) {
    min-height: calc(100vh - 90px);
    > *:first-child:not(.hero) {
      margin-top: $gutter_width_more;
      margin-bottom: $gutter_width_more;
    }
  }
}
.container {
  margin: auto;
  max-width: $max-width;
  @include respondToBelow(sm) {
    max-width: 100%;
  }
}
.row {
  display: flex;
  margin-left: -15px;
  margin-right: -15px;
  // padding: 0 15px;
  flex-wrap: wrap;
  &.middle {
    align-items: center;
  }
  &.bor {
    .col {
      padding: 15px;
      border: solid 1px #ddd;
    }
  }
  &.XLSpacing {
    margin-left: -50px;
    margin-right: -50px;
    &.bor {
      .col {
        padding: 50px;
        border: solid 1px #ddd;
      }
    }
    .col {
      padding-left: 50px;
      padding-right: 50px;
    }
  }
  &.largeSpacing {
    margin-left: -25px;
    margin-right: -25px;
    &.bor {
      .col {
        padding: 25px;
        border: solid 1px #ddd;
      }
    }
    .col {
      padding-left: 25px;
      padding-right: 25px;
    }
  }
  &.smallSpacing {
    margin-left: -7.5px;
    margin-right: -7.5px;
    &.bor {
      .col {
        padding: 7.5px;
        border: solid 1px #ddd;
      }
    }
    .col {
      padding-left: 7.5px;
      padding-right: 7.5px;
    }
  }
  .col {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
    padding-left: 15px;
    padding-right: 15px;
    @for $i from 1 through 12 {
      &.l#{$i} {
        -ms-flex: 0 0 ($i / 12) * 100%;
        flex: 0 0 ($i / 12) * 100%;
        max-width: ($i / 12) * 100%;
      }
    }
    @include respondTo(sm) {
      @for $i from 1 through 12 {
        &.m#{$i} {
          -ms-flex: 0 0 ($i / 12) * 100%;
          flex: 0 0 ($i / 12) * 100%;
          max-width: ($i / 12) * 100%;
        }
      }
    }
    @include respondTo(xs) {
      @for $i from 1 through 12 {
        &.s#{$i} {
          -ms-flex: 0 0 ($i / 12) * 100%;
          flex: 0 0 ($i / 12) * 100%;
          max-width: ($i / 12) * 100%;
        }
      }
    }
  }
}

.flexIt {
  display: flex !important;
  &.full {
    width: 100%;
  }

  &.wrap {
    flex-wrap: wrap;
  }

  &.vcenter {
    align-items: center;
  }
  &.vright {
    align-items: flex-end;
  }
  &.vleft {
    align-items: flex-start;
  }

  &.hcenter {
    justify-content: center;
  }
  &.hright {
    justify-content: flex-end;
  }
  &.hleft {
    justify-content: flex-start;
  }

  &.hsplit {
    justify-content: space-between;
  }

  &.col {
    flex-direction: column;
  }

  &.col-i {
    flex-direction: column-reverse;
  }

  &.row-i {
    flex-direction: row-reverse;
  }

  &.wrap-it {
    flex-wrap: wrap;
  }

  .flex-grow-full {
    flex: 1 0 0;
  }

  .flex-grow-half {
    flex: 0.5 0 0;
  }

  .flex-grow-twice {
    flex: 2 0 0;
  }
}

.hscroll {
  @include respondToBelow(sm) {
    display: flex !important;
    justify-content: flex-start !important;
    overflow: auto !important;
    flex-wrap: nowrap !important;
    margin: 0 !important;

    > * {
      min-width: 75% !important;
      flex-grow: unset !important;
      flex-basis: unset !important;
      max-width: none !important;
      flex: unset !important;

      &:first-child {
        margin-left: 12.5% !important;
      }
    }
    &.two_itms {
      > * {
        min-width: 50% !important;
        &:first-child {
          margin-left: 12.5% !important;
        }
      }
    }
    &.three_itms {
      > * {
        min-width: 33.333% !important;
        &:first-child {
          margin-left: 10% !important;
        }
      }
    }
  }
}

.right-align {
  text-align: right;
}
.center-align {
  text-align: center;
}
.left-align {
  text-align: left;
}
